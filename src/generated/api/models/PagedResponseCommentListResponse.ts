/* tslint:disable */
/* eslint-disable */
/**
 * 모든 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CommentListResponse } from './CommentListResponse';
import {
    CommentListResponseFromJSON,
    CommentListResponseFromJSONTyped,
    CommentListResponseToJSON,
    CommentListResponseToJSONTyped,
} from './CommentListResponse';

/**
 * 
 * @export
 * @interface PagedResponseCommentListResponse
 */
export interface PagedResponseCommentListResponse {
    /**
     * 
     * @type {Array<CommentListResponse>}
     * @memberof PagedResponseCommentListResponse
     */
    content?: Array<CommentListResponse>;
    /**
     * 
     * @type {number}
     * @memberof PagedResponseCommentListResponse
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedResponseCommentListResponse
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedResponseCommentListResponse
     */
    totalElements?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedResponseCommentListResponse
     */
    totalPages?: number;
}

/**
 * Check if a given object implements the PagedResponseCommentListResponse interface.
 */
export function instanceOfPagedResponseCommentListResponse(value: object): value is PagedResponseCommentListResponse {
    return true;
}

export function PagedResponseCommentListResponseFromJSON(json: any): PagedResponseCommentListResponse {
    return PagedResponseCommentListResponseFromJSONTyped(json, false);
}

export function PagedResponseCommentListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedResponseCommentListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(CommentListResponseFromJSON)),
        'page': json['page'] == null ? undefined : json['page'],
        'size': json['size'] == null ? undefined : json['size'],
        'totalElements': json['totalElements'] == null ? undefined : json['totalElements'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
    };
}

export function PagedResponseCommentListResponseToJSON(json: any): PagedResponseCommentListResponse {
    return PagedResponseCommentListResponseToJSONTyped(json, false);
}

export function PagedResponseCommentListResponseToJSONTyped(value?: PagedResponseCommentListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(CommentListResponseToJSON)),
        'page': value['page'],
        'size': value['size'],
        'totalElements': value['totalElements'],
        'totalPages': value['totalPages'],
    };
}

