/* tslint:disable */
/* eslint-disable */
/**
 * 모든 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntroResponse } from './IntroResponse';
import {
    IntroResponseFromJSON,
    IntroResponseFromJSONTyped,
    IntroResponseToJSON,
    IntroResponseToJSONTyped,
} from './IntroResponse';

/**
 * 
 * @export
 * @interface PagedResponseIntroResponse
 */
export interface PagedResponseIntroResponse {
    /**
     * 
     * @type {Array<IntroResponse>}
     * @memberof PagedResponseIntroResponse
     */
    content?: Array<IntroResponse>;
    /**
     * 
     * @type {number}
     * @memberof PagedResponseIntroResponse
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedResponseIntroResponse
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedResponseIntroResponse
     */
    totalElements?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedResponseIntroResponse
     */
    totalPages?: number;
}

/**
 * Check if a given object implements the PagedResponseIntroResponse interface.
 */
export function instanceOfPagedResponseIntroResponse(value: object): value is PagedResponseIntroResponse {
    return true;
}

export function PagedResponseIntroResponseFromJSON(json: any): PagedResponseIntroResponse {
    return PagedResponseIntroResponseFromJSONTyped(json, false);
}

export function PagedResponseIntroResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedResponseIntroResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(IntroResponseFromJSON)),
        'page': json['page'] == null ? undefined : json['page'],
        'size': json['size'] == null ? undefined : json['size'],
        'totalElements': json['totalElements'] == null ? undefined : json['totalElements'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
    };
}

export function PagedResponseIntroResponseToJSON(json: any): PagedResponseIntroResponse {
    return PagedResponseIntroResponseToJSONTyped(json, false);
}

export function PagedResponseIntroResponseToJSONTyped(value?: PagedResponseIntroResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(IntroResponseToJSON)),
        'page': value['page'],
        'size': value['size'],
        'totalElements': value['totalElements'],
        'totalPages': value['totalPages'],
    };
}

