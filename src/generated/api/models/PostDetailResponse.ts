/* tslint:disable */
/* eslint-disable */
/**
 * 모든 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CommentResponse } from './CommentResponse';
import {
    CommentResponseFromJSON,
    CommentResponseFromJSONTyped,
    CommentResponseToJSON,
    CommentResponseToJSONTyped,
} from './CommentResponse';

/**
 * 
 * @export
 * @interface PostDetailResponse
 */
export interface PostDetailResponse {
    /**
     * 
     * @type {number}
     * @memberof PostDetailResponse
     */
    postId?: number;
    /**
     * 
     * @type {string}
     * @memberof PostDetailResponse
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PostDetailResponse
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof PostDetailResponse
     */
    writer?: string;
    /**
     * 
     * @type {string}
     * @memberof PostDetailResponse
     */
    writerProfileImageUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof PostDetailResponse
     */
    likesCount?: number;
    /**
     * 
     * @type {Date}
     * @memberof PostDetailResponse
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PostDetailResponse
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostDetailResponse
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<CommentResponse>}
     * @memberof PostDetailResponse
     */
    comments?: Array<CommentResponse>;
}

/**
 * Check if a given object implements the PostDetailResponse interface.
 */
export function instanceOfPostDetailResponse(value: object): value is PostDetailResponse {
    return true;
}

export function PostDetailResponseFromJSON(json: any): PostDetailResponse {
    return PostDetailResponseFromJSONTyped(json, false);
}

export function PostDetailResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostDetailResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'postId': json['postId'] == null ? undefined : json['postId'],
        'title': json['title'] == null ? undefined : json['title'],
        'content': json['content'] == null ? undefined : json['content'],
        'writer': json['writer'] == null ? undefined : json['writer'],
        'writerProfileImageUrl': json['writerProfileImageUrl'] == null ? undefined : json['writerProfileImageUrl'],
        'likesCount': json['likesCount'] == null ? undefined : json['likesCount'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'tags': json['tags'] == null ? undefined : json['tags'],
        'comments': json['comments'] == null ? undefined : ((json['comments'] as Array<any>).map(CommentResponseFromJSON)),
    };
}

export function PostDetailResponseToJSON(json: any): PostDetailResponse {
    return PostDetailResponseToJSONTyped(json, false);
}

export function PostDetailResponseToJSONTyped(value?: PostDetailResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'postId': value['postId'],
        'title': value['title'],
        'content': value['content'],
        'writer': value['writer'],
        'writerProfileImageUrl': value['writerProfileImageUrl'],
        'likesCount': value['likesCount'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'tags': value['tags'],
        'comments': value['comments'] == null ? undefined : ((value['comments'] as Array<any>).map(CommentResponseToJSON)),
    };
}

