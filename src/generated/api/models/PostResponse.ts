/* tslint:disable */
/* eslint-disable */
/**
 * 모든 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface PostResponse
 */
export interface PostResponse {
  /**
   *
   * @type {number}
   * @memberof PostResponse
   */
  postId?: number;
  /**
   *
   * @type {string}
   * @memberof PostResponse
   */
  authorGithubId?: string;
  /**
   *
   * @type {string}
   * @memberof PostResponse
   */
  repositoryName?: string;
  /**
   *
   * @type {string}
   * @memberof PostResponse
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof PostResponse
   */
  content?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PostResponse
   */
  tags?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof PostResponse
   */
  commitMessage?: string;
  /**
   *
   * @type {Date}
   * @memberof PostResponse
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof PostResponse
   */
  updatedAt?: Date;
}

/**
 * Check if a given object implements the PostResponse interface.
 */
export function instanceOfPostResponse(value: object): value is PostResponse {
  return true;
}

export function PostResponseFromJSON(json: any): PostResponse {
  return PostResponseFromJSONTyped(json, false);
}

export function PostResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostResponse {
  if (json == null) {
    return json;
  }
  return {
    postId: json["postId"] == null ? undefined : json["postId"],
    authorGithubId: json["authorGithubId"] == null ? undefined : json["authorGithubId"],
    repositoryName: json["repositoryName"] == null ? undefined : json["repositoryName"],
    title: json["title"] == null ? undefined : json["title"],
    content: json["content"] == null ? undefined : json["content"],
    tags: json["tags"] == null ? undefined : json["tags"],
    commitMessage: json["commitMessage"] == null ? undefined : json["commitMessage"],
    createdAt: json["createdAt"] == null ? undefined : new Date(json["createdAt"]),
    updatedAt: json["updatedAt"] == null ? undefined : new Date(json["updatedAt"]),
  };
}

export function PostResponseToJSON(json: any): PostResponse {
  return PostResponseToJSONTyped(json, false);
}

export function PostResponseToJSONTyped(
  value?: PostResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    postId: value["postId"],
    authorGithubId: value["authorGithubId"],
    repositoryName: value["repositoryName"],
    title: value["title"],
    content: value["content"],
    tags: value["tags"],
    commitMessage: value["commitMessage"],
    createdAt: value["createdAt"] == null ? undefined : value["createdAt"].toISOString(),
    updatedAt: value["updatedAt"] == null ? undefined : value["updatedAt"].toISOString(),
  };
}
